# ================================
# Full Pi 5 Setup: Face Tracking (mediapipe via piwheels + TFLite)
# ================================

# Update and upgrade
sudo apt update && sudo apt full-upgrade -y

# Core build & media/GUI deps for OpenCV + V4L2
sudo apt install -y \
  build-essential cmake pkg-config git unzip \
  libjpeg-dev libpng-dev libtiff-dev \
  libavcodec-dev libavformat-dev libswscale-dev \
  libv4l-dev v4l-utils \
  libgtk-3-dev libcanberra-gtk* libqt5gui5 libqt5test5 libxcb-xinerama0 \
  libatlas-base-dev liblapack-dev gfortran \
  python3-dev python3-venv python3-pip python3-opencv

# Ensure Qt uses XCB (avoids Wayland plugin issues with cv2.imshow)
echo 'export QT_QPA_PLATFORM=xcb' >> ~/.bashrc
source ~/.bashrc

# Project structure
mkdir -p ~/senior_design/camera/testing

# Create + activate venv
python3 -m venv ~/senior_design/venv
source ~/senior_design/venv/bin/activate

# Upgrade pip toolchain
pip install --upgrade pip setuptools wheel

# Base pins to avoid ABI / protobuf issues
pip install "numpy<2" "protobuf<4"

# Install MediaPipe from Raspberry Pi wheels (Recipe A)
pip install --index-url https://www.piwheels.org/simple mediapipe==0.10.14

# TensorFlow Lite runtime (lightweight TF inference)
pip install tflite-runtime==2.14.0

# Useful libs for your project (serial comms + data handling)
pip install pyserial pandas numpy

# Create empty log file used by your script
touch ~/senior_design/camera/testing/face_track_log.txt

# (Now place your face_tracking.py at ~/senior_design/camera/testing/ and run:)
# python ~/senior_design/camera/testing/face_tracking.py
